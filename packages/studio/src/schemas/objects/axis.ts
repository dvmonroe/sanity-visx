import { defineField } from 'sanity';

export const axis = {
  name: 'visx.axis',
  type: 'object',
  fields: [
    defineField({
      name: 'showGrid',
      title: 'Show Grid',
      type: 'boolean',
      initialValue: false,
      description: 'Toggle to show/hide the grid lines.',
    }),
    defineField({
      name: 'showLabel',
      title: 'Show Label',
      type: 'boolean',
      initialValue: false,
      description: 'Toggle to show/hide the axis label.',
    }),
    defineField({
      name: 'axisColor',
      title: 'Axis Color',
      type: 'color',
      description: 'Color of the axis line.',
    }),
    defineField({
      name: 'label',
      title: 'Label',
      type: 'string',
      fieldset: 'label',
      description: 'The text to display as the axis label. Defaults to the axis key if not set',
    }),
    defineField({
      name: 'labelColor',
      title: 'Label Color',
      type: 'color',
      fieldset: 'label',
      description: 'Color of the axis label text.',
    }),
    defineField({
      name: 'labelFontFamily',
      title: 'Label Font Family',
      type: 'string',
      fieldset: 'label',
      description: 'Font family for the axis label text.',
    }),
    defineField({
      name: 'labelFontSize',
      title: 'Label Font Size',
      type: 'number',
      initialValue: 10,
      fieldset: 'label',
      description: 'Font size for the axis label text.',
    }),
    defineField({
      name: 'labelSpacingX',
      title: 'Label Spacing X',
      type: 'number',
      fieldset: 'label',
      description: 'Horizontal spacing for the axis label text.',
    }),
    defineField({
      name: 'labelSpacingY',
      title: 'Label Spacing Y',
      type: 'number',
      fieldset: 'label',
      description: 'Vertical spacing for the axis label text.',
    }),
    defineField({
      name: 'numTicks',
      title: 'Number of Ticks',
      type: 'number',
      fieldset: 'tick',
      description: 'The number of ticks to display on the axis.',
    }),
    defineField({
      name: 'tickLabelColor',
      title: 'Tick Label Color',
      type: 'color',
      fieldset: 'tick',
      description: 'Color of the tick label text.',
    }),
    defineField({
      name: 'tickLabelFontFamily',
      title: 'Tick Label Font Family',
      type: 'string',
      fieldset: 'tick',
      description: 'Font family for the tick label text.',
    }),
    defineField({
      name: 'tickLabelFontSize',
      title: 'Tick Label Font Size',
      type: 'number',
      initialValue: 10,
      fieldset: 'tick',
      description: 'Font size for the tick label text.',
    }),
    defineField({
      name: 'tickLabelTextAnchor',
      title: 'Tick Label Text Anchor',
      type: 'string',
      options: {
        list: ['middle', 'end', 'start'],
        layout: 'radio',
      },
      fieldset: 'tick',
      description: 'Text anchor for the tick label text.',
    }),
    defineField({
      name: 'tickStrokeColor',
      title: 'Tick Stroke Color',
      type: 'color',
      fieldset: 'tick',
      description: 'Color of the tick lines.',
    }),
  ],
  fieldsets: [
    { name: 'label', title: 'Label' },
    { name: 'tick', title: 'Tick' },
  ].sort((a, b) => a.name.localeCompare(b.name)),
};
